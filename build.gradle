plugins {
    id 'java'
    id 'application'
}

base {
    archivesName = project.archives_base_name
}

repositories {
    mavenLocal()
    mavenLocal()
    mavenCentral()
}

dependencies {
    testImplementation platform("org.junit:junit-bom:${project.junit_version}")
    testImplementation "org.junit.jupiter:junit-jupiter"

    // logger
    implementation "org.slf4j:slf4j-api:${project.slf4j_version}"
    implementation "org.apache.logging.log4j:log4j-slf4j2-impl:${project.log4j_version}"
    // utils
    implementation "org.jetbrains:annotations:${project.jetbrains_annotations_version}"
    implementation "com.google.guava:guava:${project.guava_version}"
    implementation "commons-cli:commons-cli:${project.commons_cli_version}" // cli parser
}

test {
    useJUnitPlatform()
}

tasks.withType(JavaCompile).configureEach {
    // ensure that the encoding is set to UTF-8, no matter what the system default is
    // this fixes some edge cases with special characters not displaying correctly
    // see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
    // If Javadoc is generated, this must be specified in that task too.
    it.options.encoding = "UTF-8"

    it.options.release = 21
}

application {
    mainClass = "com.github.shap_po.pencilgames.client.PencilGamesClient"
}

tasks.register('runClient', JavaExec) {
    mainClass = "com.github.shap_po.pencilgames.client.PencilGamesClient"
    classpath = sourceSets.main.runtimeClasspath
}

tasks.register('runServer', JavaExec) {
    mainClass = "com.github.shap_po.pencilgames.server.PencilGamesServer"
    classpath = sourceSets.main.runtimeClasspath
}
